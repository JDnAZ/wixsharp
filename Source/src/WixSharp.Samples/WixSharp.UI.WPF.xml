<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WixSharp.UI.WPF</name>
    </assembly>
    <members>
        <member name="T:WixSharp.UI.WPF.CustomDialogBase">
             <summary>
             This class is not to be used directly. This class is used by WixSharp runtime as a
             container for a user defined content (a WPF UserControl) of the custom dialog.
             <para>This class is a convenient way of defining custom UI dialogs without defining
             the full UI layout of the dialog but only a small area implementing the business logic
             of the setup step/phase
             </para>
             </summary>
             <example>The following is an example of adding a UserControl ('CustomDialogPanel') as a
             content of the custom dialog. Note, your control must implement <see cref="T:WixSharp.UI.WPF.IWpfDialogContent"/>
             interface so WixSharp recognizes it as an embeddable custom dialog content.<code>
             project.ManagedUI.InstallDialogs.Add&gt;WelcomeDialog&gt;()
                                             .Add&gt;FeaturesDialog&gt;()
                                             .Add&gt;CustomDialogWith&lt;CustomDialogPanel&gt;&gt;()
             . . .
             public partial class CustomDialogPanel : UserControl, IWpfDialogContent
             {
                 public CustomDialogPanel()
                 {
                     InitializeComponent();
                 }
            
                 public void Init(CustomDialogBase parent)
                 {
                     ISession session = parent?.ManagedFormHost.Runtime.Session;
                     . . .
            
             </code>
             </example>
             <seealso cref="T:WixSharp.UI.WPF.WpfDialog" />
             <seealso cref="T:WixSharp.IWpfDialog" />
             <seealso cref="T:System.Windows.Markup.IComponentConnector" />
            <summary>
            CustomDialogBase
            </summary>
        </member>
        <member name="M:WixSharp.UI.WPF.CustomDialogBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WixSharp.UI.WPF.CustomDialogBase"/> class.
            </summary>
        </member>
        <member name="P:WixSharp.UI.WPF.CustomDialogBase.ButtonsPanel">
            <summary>
            Gets the panel (<see cref="T:System.Windows.Controls.StackPanel"/>) with the navigation buttons (Back, Next and Cancel).
            </summary>
            <value>
            The buttons panel.
            </value>
        </member>
        <member name="P:WixSharp.UI.WPF.CustomDialogBase.Buttons">
            <summary>
            Gets the default navigation buttons (Back, Next and Cancel).
            </summary>
            <value>
            The navigation buttons.
            </value>
        </member>
        <member name="P:WixSharp.UI.WPF.CustomDialogBase.GoNextButton">
            <summary>
            Gets the standard 'Next' navigation button.
            </summary>
            <value>
            The 'Next' button.
            </value>
        </member>
        <member name="P:WixSharp.UI.WPF.CustomDialogBase.GoPrevButton">
            <summary>
            Gets the standard 'Beck' navigation button.
            </summary>
            <value>
            The 'Beck' button.
            </value>
        </member>
        <member name="P:WixSharp.UI.WPF.CustomDialogBase.CancelButton">
            <summary>
            Gets the standard 'Cancel' navigation button.
            </summary>
            <value>
            The 'Cancel' button.
            </value>
        </member>
        <member name="M:WixSharp.UI.WPF.CustomDialogBase.Init">
            <summary>
            This method is invoked by WixSHarp runtime when the custom dialog content is internally fully initialized.
            This is a convenient place to do further initialization activities (e.g. localization).
            </summary>
        </member>
        <member name="M:WixSharp.UI.WPF.CustomDialogBase.SetUserContent(System.Object)">
            <summary>
            Sets the content of the user defined custom dialog panel. This method is to be only invoked by WixSHarp runtime.
            </summary>
            <param name="userContent">Content of the user.</param>
        </member>
        <member name="M:WixSharp.UI.WPF.CustomDialogBase.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:WixSharp.UI.WPF.DependencyDescriptor">
            <summary>
            Returns an array of AssemblyName that definses referenced assemblies required at runtime for WixSharp WPF dialogs.
            <para>Typically it is Caliburn.Micro assemblies and their dependencies and WixSharp.UI assembly.</para>
            <para>This method is to be used by WixSharp compiler only.</para>
            </summary>
        </member>
        <member name="M:WixSharp.UI.WPF.DependencyDescriptor.GetRefAssemblies">
            <summary>
            Gets the referenced assemblies.
            </summary>
            <returns></returns>
        </member>
        <member name="T:WixSharp.UI.WPF.Extensions">
            <summary>
            WPF related generic method extensions
            </summary>
        </member>
        <member name="M:WixSharp.UI.WPF.Extensions.ToImageSource(System.Drawing.Bitmap)">
            <summary>
            </summary>
            <param name="src">The source.</param>
            <returns></returns>
        </member>
        <member name="M:WixSharp.UI.WPF.Extensions.Localize(WixSharp.InstallerRuntime,System.Windows.DependencyObject)">
            <summary>
            Localizes the specified WPF element and its children.
            <para>The localization is performed according
            <see cref="M:WixSharp.InstallerRuntime.Localize(System.String)"/> localization behavior.</para>
            </summary>
            <returns></returns>
        </member>
        <member name="M:WixSharp.UI.WPF.Extensions.GetChildrenOfType``1(System.Windows.DependencyObject)">
            <summary>
            Gets the <see cref="T:System.Windows.DependencyObject"/> children of the specified type.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="depObj">The <see cref="T:System.Windows.DependencyObject"/> instance.</param>
            <returns></returns>
        </member>
        <member name="T:WixSharp.UI.WPF.IWpfDialogContent">
             <summary>
             Interface that marks WPF content (e.g. UserControl) as a content that can be embedded in
             the custom dialog.
             </summary>
             <example>The following is an example of adding a UserControl ('CustomDialogPanel') as a
             content of the custom dialog. Note, your control must implement <see cref="T:WixSharp.UI.WPF.IWpfDialogContent"/>
             interface so WixSharp recognizes it as an embeddable custom dialog content.<code>
             project.ManagedUI.InstallDialogs.Add&gt;WelcomeDialog&gt;()
                                             .Add&gt;FeaturesDialog&gt;()
                                             .Add&gt;CustomDialogWith&lt;CustomDialogPanel&gt;&gt;()
             . . .
             public partial class CustomDialogPanel : UserControl, IWpfDialogContent
             {
                 public CustomDialogPanel()
                 {
                     InitializeComponent();
                 }
            
                 public void Init(CustomDialogBase parent)
                 {
                     ISession session = parent?.ManagedFormHost.Runtime.Session;
                     . . .
            
             </code>
             </example>
             <seealso cref="T:WixSharp.IDialog" />
        </member>
        <member name="M:WixSharp.UI.WPF.IWpfDialogContent.Init(WixSharp.UI.WPF.CustomDialogBase)">
            <summary>
            Initializes the instance of <see cref="T:WixSharp.UI.WPF.IWpfDialogContent"/> and passes the
            reference to the parent dialog. It is a good place to adjust layout including parent dialog
            element (e.g. disable "Next" button). Or do localization
            </summary>
            <param name="parentDialog">The parent dialog.</param>
        </member>
        <member name="T:WixSharp.UI.WPF.WpfDialog">
            <summary>
            A base class for WPF custom dialogs.
            </summary>
            <seealso cref="T:System.Windows.Controls.UserControl" />
            <seealso cref="T:WixSharp.IManagedDialog" />
        </member>
        <member name="P:WixSharp.UI.WPF.WpfDialog.DialogTitle">
            <summary>
            Gets or sets the dialog title.
            </summary>
            <value>
            The dialog title.
            </value>
        </member>
        <member name="P:WixSharp.UI.WPF.WpfDialog.Host">
            <summary>
            Gets or sets the reference to the dialog host (e.g. <see cref="T:WixSharp.UI.Forms.ManagedForm"/>).
            </summary>
            <value>
            The host.
            </value>
        </member>
        <member name="P:WixSharp.UI.WPF.WpfDialog.ManagedFormHost">
            <summary>
            Gets or sets the reference to the dialog host.
            <para>This property is the same as <see cref="P:WixSharp.UI.WPF.WpfDialog.Host"/> except it returns already typecasted host instance</para>
            </summary>
            <value>
            The managed form host.
            </value>
        </member>
        <member name="P:WixSharp.UI.WPF.WpfDialog.Shell">
            <summary>
            Gets or sets the UI shell (main UI window). This property is set the ManagedUI runtime (IManagedUI).
            On the other hand it is consumed (accessed) by the UI dialog (IManagedDialog).
            </summary>
            <value>
            The shell.
            </value>
        </member>
        <member name="M:WixSharp.UI.WPF.WpfDialog.Localize(System.Windows.DependencyObject)">
            <summary>
            Called when MSI execution is complete.
            </summary>
        </member>
        <member name="M:WixSharp.UI.WPF.WpfDialog.OnExecuteComplete">
            <summary>
            Called when MSI execution is complete.
            </summary>
        </member>
        <member name="M:WixSharp.UI.WPF.WpfDialog.OnExecuteStarted">
            <summary>
            Called when MSI execute started.
            </summary>
        </member>
        <member name="M:WixSharp.UI.WPF.WpfDialog.OnProgress(System.Int32)">
            <summary>
            Called when MSI execution progress is changed.
            </summary>
            <param name="progressPercentage">The progress percentage.</param>
        </member>
        <member name="M:WixSharp.UI.WPF.WpfDialog.ProcessMessage(Microsoft.Deployment.WindowsInstaller.InstallMessage,Microsoft.Deployment.WindowsInstaller.Record,Microsoft.Deployment.WindowsInstaller.MessageButtons,Microsoft.Deployment.WindowsInstaller.MessageIcon,Microsoft.Deployment.WindowsInstaller.MessageDefaultButton)">
            <summary>
            Processes information and progress messages sent to the user interface.
            <para> This method directly mapped to the
            <see cref="T:Microsoft.Deployment.WindowsInstaller.IEmbeddedUI.ProcessMessage" />.</para>
            </summary>
            <param name="messageType">Type of the message.</param>
            <param name="messageRecord">The message record.</param>
            <param name="buttons">The buttons.</param>
            <param name="icon">The icon.</param>
            <param name="defaultButton">The default button.</param>
            <returns></returns>
        </member>
        <member name="T:WixSharp.UI.WPF.WpfDialogHost">
            <summary>
            A managed dialog (WinForm) class that is capable of hosting WPF content. This class it to be use by WixSharp runtime only and not
            intended to be a part of any user code (setup definition).
            <para>Note WixSharp uses this class via Reflection with <see cref="M:WixSharp.UIShell.CreateDefaultWpfDialgHost"/></para>
            </summary>
            <seealso cref="T:WixSharp.UI.Forms.ManagedForm" />
            <seealso cref="T:WixSharp.IManagedDialog" />
            <seealso cref="T:WixSharp.IWpfDialogHost" />
        </member>
        <member name="M:WixSharp.UI.WPF.WpfDialogHost.SetDialogContent(WixSharp.IWpfDialog)">
            <summary>
            Sets the content of the dialog.
            </summary>
            <param name="content">The content.</param>
        </member>
        <member name="M:WixSharp.UI.WPF.WpfDialogHost.OnShellChanged">
            <summary>
            Called when Shell is changed. It is a good place to initialize the dialog to reflect the MSI session
            (e.g. localize the view).
            </summary>
        </member>
        <member name="T:WixSharp.UI.WPF.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:WixSharp.UI.WPF.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:WixSharp.UI.WPF.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
    </members>
</doc>
